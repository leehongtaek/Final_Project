<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
<!-- 2015.12.12  Spring MVC 설정  @author Kim Byeong Gi -->

<!--================================================================ -->
<!--======================== Spring MVC 설정 ========================= -->
<!--================================================================ -->	


	<!-- 어노테이션 인식 세팅 /루트 상태 경로 인식 -->
	<mvc:annotation-driven />
	<!-- 컴포넌트 스캔 기능으로 스프링 스테레오타입의 어노테이션을 인식함  -->
	<context:component-scan base-package="com.easyware"
		annotation-config="true" />
	<!-- 일반 서블릿 요청을 받아들임, jsp 뿐만 아니라 다른 자원들도 가져가기 위해 설정 -->
	<mvc:default-servlet-handler />
	<!-- 자원 경로 지정하기 -->
	<mvc:resources location="/resources/" mapping="/resources/**" />
	

<!--================================================================ -->
<!--======================== Spring Resolver 설정 ==================== -->
<!--================================================================ --> 

	<!-- Tiles 설정 시작 -->
	<bean id="tilesviewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<property name="order" value="0" />
	</bean>

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles-definitions.xml</value>
			</list>
		</property>
	</bean>
	<!-- Tiles 설정 끝 -->
	
	<!-- PoiResolver -->
	<bean id="PoiResolver"
		class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<property name="order" value="1" />
		<property name="basename" value="views" />
	</bean>

	<!-- 웹서버가 시작될때 설정 파일을 로딩함 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="2" />
	</bean>

	<!-- multipartResolver 는 Bean 이름 상수로 지정되어 있기에 id 명이 상수에 선언된 것과 일치해야함 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />


<!--================================================================ -->
<!--======================== Java Mail 설정   ========================= -->
<!--================================================================ --> 

	<!-- 구글 메일 IMAP 사용 (메일전송기능) -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="465" />
		<property name="protocol" value="smtp"></property>
		<property name="defaultEncoding" value="utf-8" />
		<property name="username" value="kosta.egroup@gmail.com" />
		<property name="password" value="qefdnpauohvynmfh" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.ssl.enable">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.sendpartial">true</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.connectiontimeout">60000</prop>
				<prop key="mail.smtp.timeout">60000</prop>
			</props>
		</property>
	</bean>



<!--================================================================ -->
<!--======================== Spring WebSocket 설정   ================== -->
<!--================================================================ -->

	<!-- Spring 4 버전에서 지원하는  WebSocket을 활용하여 알람 기능과 채팅기능을 구현할때 사용하였음 -->
	<bean id="chatHandler" class="com.easyware.websocket.controller.Chat_Handler"/>
	<websocket:handlers>
		<websocket:mapping handler="chatHandler" path="/ws/chat.sockjs"/>
		<websocket:sockjs   
			websocket-enabled="true"
			disconnect-delay="5000"
			session-cookie-needed="true"
		/>
	</websocket:handlers>
	
	<!-- WebRtc Socket 시그날링 서버로 사용이 목적이었으나 아직 미구현함.  -->
	<bean id="webRtcHandler" class="com.easyware.websocket.controller.Chat_Handler"/>
	<websocket:handlers>
		<websocket:mapping handler="webRtcHandler" path="/ws/webrtc.sockjs"/>
		<websocket:sockjs   
			websocket-enabled="true"
			disconnect-delay="6000"
			session-cookie-needed="true"
		/>
	</websocket:handlers>

</beans>
